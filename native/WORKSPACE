load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

git_repository(
    name = "com_google_absl",
    remote = "https://github.com/abseil/abseil-cpp.git",
    commit = "41a6263fd0bcc93a90ff739785f17260f8ea061e",
    shallow_since = "1595357609 -0400",
)

git_repository(
    name = "gtest",
    remote = "https://github.com/google/googletest.git",
    commit = "a781fe29bcf73003559a3583167fe3d647518464",
    shallow_since = "1594836583 -0400",
)

new_git_repository(
    name = "concurrentqueue",
    remote = "https://github.com/cameron314/concurrentqueue.git",
    commit = "79cec4c3bf1ca23ea4a03adfcd3c2c3659684dd2",
    shallow_since = "1580387311 -0500",
    build_file_content = """

cc_library(
    name = "concurrentqueue",
    hdrs = ["concurrentqueue.h", "blockingconcurrentqueue.h", "lightweightsemaphore.h"],
    visibility = ["//visibility:public"],
    linkopts = ["-lrt"],
)
""",
)

new_git_repository(
    name = "readerwriterqueue",
    remote = "https://github.com/cameron314/readerwriterqueue.git",
    commit = "435e36540e306cac40fcfeab8cc0a22d48464509",
    shallow_since = "1594429759 -0400",
    build_file_content = """

cc_library(
    name = "readerwriterqueue",
    hdrs = ["readerwriterqueue.h", "atomicops.h"],
    visibility = ["//visibility:public"],
    linkopts = ["-lrt"],
)
""",
)

new_git_repository(
    name = "pybind11",
    commit = "80d452484c5409444b0ec19383faa84bb7a4d351",
    remote = "https://github.com/pybind/pybind11.git",
    build_file_content = """

cc_library(
    name = "pybind11",
    hdrs = glob(["include/pybind11/*.h"]) + 
        glob(["include/pybind11/detail/*.h"]),
    visibility = ["//visibility:public"],
    includes = ["include"],
)
""",
    shallow_since = "1571097444 +0200"
)

new_git_repository(
    name = "streamvbyte",
    commit = "92ab8a74c96b9e0f684c45aec9cf7f57405ff8da",
    remote = "https://github.com/lemire/streamvbyte.git",
    build_file_content = """
cc_library (
    name = "streamvbyte",
    hdrs = glob(["include/*"]) + glob(["src/*"]),
    srcs = [
        "src/streamvbyte_decode.c",
        "src/streamvbyte_encode.c",
        "src/streamvbytedelta_decode.c",
        "src/streamvbytedelta_encode.c",
        "src/streamvbyte_0124_encode.c",
        "src/streamvbyte_0124_decode.c",
        "src/streamvbyte_zigzag.c"
    ],
    visibility = ["//visibility:public"],
    includes = ["include"],
    copts = ["-std=c99"],
)
""",
    shallow_since = "1557332318 -0400"
)

new_git_repository(
    name = "json",
    commit = "e7b3b40b5a95bc74b9a7f662830a27c49ffc01b4",
    remote = "https://github.com/nlohmann/json.git",
     build_file_content = """
cc_library (
    name = "json",
    hdrs = glob(["include/nlohmann/**"]),
     visibility = ["//visibility:public"],
     includes = ["include"],
 )
 """,
   shallow_since = "1573989704 +0100"
)

new_git_repository(
    name = "picosha2",
    commit = "b699e6c900be6e00152db5a3d123c1db42ea13d0",
    remote = "https://github.com/okdshin/PicoSHA2.git",
    build_file_content = """
cc_library (
    name = "picosha2",
    hdrs = ['picosha2.h'],
    visibility = ["//visibility:public"],
)
""",
shallow_since = "1531968639 +0900"
)

new_git_repository(
    name = "streamvbyte",
    commit = "92ab8a74c96b9e0f684c45aec9cf7f57405ff8da",
    remote = "https://github.com/lemire/streamvbyte.git",
    build_file_content = """
cc_library (
    name = "streamvbyte",
    hdrs = glob(["include/*"]) + glob(["src/*"]),
    srcs = [
        "src/streamvbyte_decode.c",
        "src/streamvbyte_encode.c",
        "src/streamvbytedelta_decode.c",
        "src/streamvbytedelta_encode.c",
        "src/streamvbyte_0124_encode.c",
        "src/streamvbyte_0124_decode.c",
        "src/streamvbyte_zigzag.c"
    ],
    visibility = ["//visibility:public"],
    includes = ["include"],
    copts = ["-std=c99"],
)
""",
    shallow_since = "1557332318 -0400"
)



# Rule repository
http_archive(
   name = "rules_foreign_cc",
   strip_prefix = "rules_foreign_cc-master",
   url = "https://github.com/bazelbuild/rules_foreign_cc/archive/master.zip",
   sha256 = "c823078385e9f6891f7e245be4eb319d6d74f1a3d6d5ba7392f1e382ef190651",
)

load("@rules_foreign_cc//:workspace_definitions.bzl", "rules_foreign_cc_dependencies")
rules_foreign_cc_dependencies()

# Group the sources of the library so that CMake rule have access to it
all_content = """filegroup(name = "all", srcs = glob(["**"]), visibility = ["//visibility:public"])"""


# zlib_ng source code repository
http_archive(
    name = "source_zlib_ng",
    build_file_content = all_content,
    strip_prefix = "zlib-ng-380b859ce4eb4298687e9f0c40e0750c3e1c723c",
    urls = ["https://github.com/zlib-ng/zlib-ng/archive/380b859ce4eb4298687e9f0c40e0750c3e1c723c.zip"],
    sha256 = "e4951beace641c47579dd8617d2b989705840f22110b8fb36ad83b1a1250b295",
)

# lzma source code repository
http_archive(
    name = "source_xz",
    build_file_content = all_content,
    strip_prefix = "xz-5.2.5",
    urls = ["https://tukaani.org/xz/xz-5.2.5.tar.gz"],
    sha256 = "f6f4910fd033078738bd82bfba4f49219d03b17eb0794eb91efbae419f4aba10",
)

# avro source code repository
http_archive(
    name = "source_avro",
    build_file_content = all_content,
    strip_prefix = "avro-release-1.10.0",
    urls = ["https://github.com/apache/avro/archive/release-1.10.0.tar.gz"],
    sha256 = "50ceefe582193ef8a92a8891bac1520df778f5c260f2ba68f4c9ae41417e3777",
)

# snappy source code repository
http_archive(
    name = "source_snappy",
    build_file_content = all_content,
    strip_prefix = "snappy-1.1.8",
    url = "https://github.com/google/snappy/archive/1.1.8.tar.gz",
    sha256 = "16b677f07832a612b0836178db7f374e414f94657c138e6993cbfc5dcc58651f",
)

# jansson source code repository
http_archive(
    name = "source_jansson",
    build_file_content = all_content,
    strip_prefix = "jansson-2.13.1",
    url = "https://github.com/akheron/jansson/archive/v2.13.1.tar.gz",
    sha256 = "f22901582138e3203959c9257cf83eba9929ac41d7be4a42557213a22ebcc7a0",
)

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

git_repository(
    name = "com_github_nelhage_rules_boost",
    commit = "1e3a69bf2d5cd10c34b74f066054cd335d033d71",
    remote = "https://github.com/nelhage/rules_boost",
    shallow_since = "1591047380 -0700",
)

load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")
boost_deps()